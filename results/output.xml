<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230731 16:48:36.873" rpa="false" schemaversion="4">
<suite id="s1" name="Api Teste Usuarios" source="c:\Automações RobotFramework\web-test\api_tests\api_teste_usuarios.robot">
<test id="s1-t1" name="Cenário 01: Cadastrar um novo usuário com sucesso na ServeRest" line="5">
<kw name="Criar um usuário novo" library="api_teste_resource">
<kw name="Generate Random String" library="String">
<var>${palavra_aleatoria}</var>
<arg>length=4</arg>
<arg>chars=[LETTERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230731 16:48:37.333" level="INFO">${palavra_aleatoria} = zdLp</msg>
<status status="PASS" starttime="20230731 16:48:37.332" endtime="20230731 16:48:37.339"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${palavra_aleatoria}</var>
<arg>${palavra_aleatoria}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230731 16:48:37.340" level="INFO">${palavra_aleatoria} = zdlp</msg>
<status status="PASS" starttime="20230731 16:48:37.339" endtime="20230731 16:48:37.341"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${EMAIL_TESTE}</arg>
<arg>${palavra_aleatoria}@emailteste.com</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230731 16:48:37.344" level="INFO">${EMAIL_TESTE} = zdlp@emailteste.com</msg>
<status status="PASS" starttime="20230731 16:48:37.341" endtime="20230731 16:48:37.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EMAIL_TESTE}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:37.345" level="INFO">zdlp@emailteste.com</msg>
<status status="PASS" starttime="20230731 16:48:37.344" endtime="20230731 16:48:37.345"/>
</kw>
<status status="PASS" starttime="20230731 16:48:37.328" endtime="20230731 16:48:37.346"/>
</kw>
<kw name="Cadastrar o usuário criado na ServeRest" library="api_teste_resource">
<arg>email=${EMAIL_TESTE}</arg>
<arg>status_code_desejado=201</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Fulano da Silva</arg>
<arg>email=${email}</arg>
<arg>password=12345</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230731 16:48:37.349" level="INFO">${body} = {'nome': 'Fulano da Silva', 'email': 'zdlp@emailteste.com', 'password': '12345', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230731 16:48:37.348" endtime="20230731 16:48:37.349"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230731 16:48:37.351" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230731 16:48:37.350" endtime="20230731 16:48:37.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:37.353" level="INFO">{'nome': 'Fulano da Silva', 'email': 'zdlp@emailteste.com', 'password': '12345', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230731 16:48:37.352" endtime="20230731 16:48:37.353"/>
</kw>
<kw name="Criar Sessão na ServeRest" library="api_teste_resource">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230731 16:48:37.355" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230731 16:48:37.354" endtime="20230731 16:48:37.356"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=ServeRest</arg>
<arg>url=https://serverest.dev</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230731 16:48:37.357" level="INFO">Creating Session using : alias=ServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230731 16:48:37.356" endtime="20230731 16:48:37.358"/>
</kw>
<status status="PASS" starttime="20230731 16:48:37.354" endtime="20230731 16:48:37.358"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${reposta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/usuarios</arg>
<arg>json=${body}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230731 16:48:37.818" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '105'} 
 body=b'{"nome": "Fulano da Silva", "email": "zdlp@emailteste.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg timestamp="20230731 16:48:37.819" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1a002658-6681-4c94-9173-0d73287e14cb', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd8ca908ca4235257b5a5b92f2d099130', 'Date': 'Mon, 31 Jul 2023 19:48:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Yncepaq3vBYmorSJ"
} 
 </msg>
<msg timestamp="20230731 16:48:37.819" level="INFO">C:\Users\gusta\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20230731 16:48:37.821" level="INFO">${reposta} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230731 16:48:37.359" endtime="20230731 16:48:37.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${reposta.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:37.823" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'Yncepaq3vBYmorSJ'}</msg>
<status status="PASS" starttime="20230731 16:48:37.822" endtime="20230731 16:48:37.824"/>
</kw>
<if>
<branch type="IF" condition="${reposta.status_code} == 201">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID_USUARIO}</arg>
<arg>${reposta.json()["_id"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230731 16:48:37.828" level="INFO">${ID_USUARIO} = Yncepaq3vBYmorSJ</msg>
<status status="PASS" starttime="20230731 16:48:37.826" endtime="20230731 16:48:37.828"/>
</kw>
<status status="PASS" starttime="20230731 16:48:37.824" endtime="20230731 16:48:37.829"/>
</branch>
<status status="PASS" starttime="20230731 16:48:37.824" endtime="20230731 16:48:37.829"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<arg>${reposta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230731 16:48:37.831" level="INFO">${RESPOSTA} = {'message': 'Cadastro realizado com sucesso', '_id': 'Yncepaq3vBYmorSJ'}</msg>
<status status="PASS" starttime="20230731 16:48:37.829" endtime="20230731 16:48:37.832"/>
</kw>
<status status="PASS" starttime="20230731 16:48:37.346" endtime="20230731 16:48:37.832"/>
</kw>
<kw name="Conferir se o usuário foi cadastrado corretamente" library="api_teste_resource">
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:37.835" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'Yncepaq3vBYmorSJ'}</msg>
<status status="PASS" starttime="20230731 16:48:37.835" endtime="20230731 16:48:37.835"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPOSTA}</arg>
<arg>message</arg>
<arg>Cadastro realizado com sucesso</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230731 16:48:37.836" endtime="20230731 16:48:37.836"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${RESPOSTA}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20230731 16:48:37.836" endtime="20230731 16:48:37.837"/>
</kw>
<status status="PASS" starttime="20230731 16:48:37.834" endtime="20230731 16:48:37.837"/>
</kw>
<status status="PASS" starttime="20230731 16:48:37.326" endtime="20230731 16:48:37.838"/>
</test>
<test id="s1-t2" name="Cenário 02: Cadastrar um usuário já existente" line="10">
<kw name="Criar um usuário novo" library="api_teste_resource">
<kw name="Generate Random String" library="String">
<var>${palavra_aleatoria}</var>
<arg>length=4</arg>
<arg>chars=[LETTERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230731 16:48:37.844" level="INFO">${palavra_aleatoria} = bpph</msg>
<status status="PASS" starttime="20230731 16:48:37.843" endtime="20230731 16:48:37.844"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${palavra_aleatoria}</var>
<arg>${palavra_aleatoria}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230731 16:48:37.846" level="INFO">${palavra_aleatoria} = bpph</msg>
<status status="PASS" starttime="20230731 16:48:37.845" endtime="20230731 16:48:37.846"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${EMAIL_TESTE}</arg>
<arg>${palavra_aleatoria}@emailteste.com</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230731 16:48:37.849" level="INFO">${EMAIL_TESTE} = bpph@emailteste.com</msg>
<status status="PASS" starttime="20230731 16:48:37.847" endtime="20230731 16:48:37.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EMAIL_TESTE}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:37.851" level="INFO">bpph@emailteste.com</msg>
<status status="PASS" starttime="20230731 16:48:37.850" endtime="20230731 16:48:37.852"/>
</kw>
<status status="PASS" starttime="20230731 16:48:37.842" endtime="20230731 16:48:37.852"/>
</kw>
<kw name="Cadastrar o usuário criado na ServeRest" library="api_teste_resource">
<arg>email=${EMAIL_TESTE}</arg>
<arg>status_code_desejado=201</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Fulano da Silva</arg>
<arg>email=${email}</arg>
<arg>password=12345</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230731 16:48:37.855" level="INFO">${body} = {'nome': 'Fulano da Silva', 'email': 'bpph@emailteste.com', 'password': '12345', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230731 16:48:37.854" endtime="20230731 16:48:37.855"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230731 16:48:37.856" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230731 16:48:37.855" endtime="20230731 16:48:37.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:37.857" level="INFO">{'nome': 'Fulano da Silva', 'email': 'bpph@emailteste.com', 'password': '12345', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230731 16:48:37.857" endtime="20230731 16:48:37.857"/>
</kw>
<kw name="Criar Sessão na ServeRest" library="api_teste_resource">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230731 16:48:37.859" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230731 16:48:37.858" endtime="20230731 16:48:37.859"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=ServeRest</arg>
<arg>url=https://serverest.dev</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230731 16:48:37.860" level="INFO">Creating Session using : alias=ServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230731 16:48:37.859" endtime="20230731 16:48:37.861"/>
</kw>
<status status="PASS" starttime="20230731 16:48:37.858" endtime="20230731 16:48:37.861"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${reposta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/usuarios</arg>
<arg>json=${body}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230731 16:48:38.267" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '105'} 
 body=b'{"nome": "Fulano da Silva", "email": "bpph@emailteste.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg timestamp="20230731 16:48:38.268" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '28b974fa-9780-456f-87ad-31ce64448790', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '8de686b928646d7a201698e16c28479b', 'Date': 'Mon, 31 Jul 2023 19:48:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "wD1EwtAXzwvyYOlH"
} 
 </msg>
<msg timestamp="20230731 16:48:38.268" level="INFO">C:\Users\gusta\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20230731 16:48:38.271" level="INFO">${reposta} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230731 16:48:37.861" endtime="20230731 16:48:38.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${reposta.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:38.276" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'wD1EwtAXzwvyYOlH'}</msg>
<status status="PASS" starttime="20230731 16:48:38.273" endtime="20230731 16:48:38.276"/>
</kw>
<if>
<branch type="IF" condition="${reposta.status_code} == 201">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID_USUARIO}</arg>
<arg>${reposta.json()["_id"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230731 16:48:38.283" level="INFO">${ID_USUARIO} = wD1EwtAXzwvyYOlH</msg>
<status status="PASS" starttime="20230731 16:48:38.279" endtime="20230731 16:48:38.283"/>
</kw>
<status status="PASS" starttime="20230731 16:48:38.277" endtime="20230731 16:48:38.283"/>
</branch>
<status status="PASS" starttime="20230731 16:48:38.277" endtime="20230731 16:48:38.284"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<arg>${reposta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230731 16:48:38.287" level="INFO">${RESPOSTA} = {'message': 'Cadastro realizado com sucesso', '_id': 'wD1EwtAXzwvyYOlH'}</msg>
<status status="PASS" starttime="20230731 16:48:38.284" endtime="20230731 16:48:38.287"/>
</kw>
<status status="PASS" starttime="20230731 16:48:37.853" endtime="20230731 16:48:38.288"/>
</kw>
<kw name="Vou repetir o cadastro do usuário" library="api_teste_resource">
<kw name="Cadastrar o usuário criado na ServeRest" library="api_teste_resource">
<arg>email=${EMAIL_TESTE}</arg>
<arg>status_code_desejado=400</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Fulano da Silva</arg>
<arg>email=${email}</arg>
<arg>password=12345</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230731 16:48:38.292" level="INFO">${body} = {'nome': 'Fulano da Silva', 'email': 'bpph@emailteste.com', 'password': '12345', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230731 16:48:38.291" endtime="20230731 16:48:38.293"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230731 16:48:38.294" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230731 16:48:38.293" endtime="20230731 16:48:38.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:38.295" level="INFO">{'nome': 'Fulano da Silva', 'email': 'bpph@emailteste.com', 'password': '12345', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230731 16:48:38.294" endtime="20230731 16:48:38.295"/>
</kw>
<kw name="Criar Sessão na ServeRest" library="api_teste_resource">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230731 16:48:38.297" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230731 16:48:38.297" endtime="20230731 16:48:38.298"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=ServeRest</arg>
<arg>url=https://serverest.dev</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230731 16:48:38.300" level="INFO">Creating Session using : alias=ServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230731 16:48:38.299" endtime="20230731 16:48:38.300"/>
</kw>
<status status="PASS" starttime="20230731 16:48:38.296" endtime="20230731 16:48:38.301"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${reposta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/usuarios</arg>
<arg>json=${body}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230731 16:48:38.708" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '105'} 
 body=b'{"nome": "Fulano da Silva", "email": "bpph@emailteste.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg timestamp="20230731 16:48:38.709" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '4238c858-b722-4537-beea-df367d09b66e', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7255b2c352bb4edf74a2a9015f5dcee3', 'Date': 'Mon, 31 Jul 2023 19:48:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '53'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg timestamp="20230731 16:48:38.709" level="INFO">C:\Users\gusta\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20230731 16:48:38.711" level="INFO">${reposta} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20230731 16:48:38.301" endtime="20230731 16:48:38.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${reposta.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:38.713" level="INFO">{'message': 'Este email já está sendo usado'}</msg>
<status status="PASS" starttime="20230731 16:48:38.712" endtime="20230731 16:48:38.714"/>
</kw>
<if>
<branch type="IF" condition="${reposta.status_code} == 201">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID_USUARIO}</arg>
<arg>${reposta.json()["_id"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20230731 16:48:38.715" endtime="20230731 16:48:38.715"/>
</kw>
<status status="NOT RUN" starttime="20230731 16:48:38.714" endtime="20230731 16:48:38.716"/>
</branch>
<status status="PASS" starttime="20230731 16:48:38.714" endtime="20230731 16:48:38.716"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<arg>${reposta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230731 16:48:38.717" level="INFO">${RESPOSTA} = {'message': 'Este email já está sendo usado'}</msg>
<status status="PASS" starttime="20230731 16:48:38.716" endtime="20230731 16:48:38.717"/>
</kw>
<status status="PASS" starttime="20230731 16:48:38.290" endtime="20230731 16:48:38.718"/>
</kw>
<status status="PASS" starttime="20230731 16:48:38.289" endtime="20230731 16:48:38.718"/>
</kw>
<kw name="Verificar se a API não permitiu o cadastro repetido" library="api_teste_resource">
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPOSTA}</arg>
<arg>message</arg>
<arg>Este email já está sendo usado</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230731 16:48:38.719" endtime="20230731 16:48:38.720"/>
</kw>
<status status="PASS" starttime="20230731 16:48:38.718" endtime="20230731 16:48:38.720"/>
</kw>
<status status="PASS" starttime="20230731 16:48:37.840" endtime="20230731 16:48:38.720"/>
</test>
<test id="s1-t3" name="Cenário 03: Consultar os dados de um novo usuário" line="16">
<kw name="Criar um usuário novo" library="api_teste_resource">
<kw name="Generate Random String" library="String">
<var>${palavra_aleatoria}</var>
<arg>length=4</arg>
<arg>chars=[LETTERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230731 16:48:38.725" level="INFO">${palavra_aleatoria} = CmKT</msg>
<status status="PASS" starttime="20230731 16:48:38.724" endtime="20230731 16:48:38.725"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${palavra_aleatoria}</var>
<arg>${palavra_aleatoria}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230731 16:48:38.727" level="INFO">${palavra_aleatoria} = cmkt</msg>
<status status="PASS" starttime="20230731 16:48:38.726" endtime="20230731 16:48:38.727"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${EMAIL_TESTE}</arg>
<arg>${palavra_aleatoria}@emailteste.com</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230731 16:48:38.730" level="INFO">${EMAIL_TESTE} = cmkt@emailteste.com</msg>
<status status="PASS" starttime="20230731 16:48:38.728" endtime="20230731 16:48:38.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${EMAIL_TESTE}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:38.731" level="INFO">cmkt@emailteste.com</msg>
<status status="PASS" starttime="20230731 16:48:38.731" endtime="20230731 16:48:38.732"/>
</kw>
<status status="PASS" starttime="20230731 16:48:38.724" endtime="20230731 16:48:38.732"/>
</kw>
<kw name="Cadastrar o usuário criado na ServeRest" library="api_teste_resource">
<arg>email=${EMAIL_TESTE}</arg>
<arg>status_code_desejado=201</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>nome=Fulano da Silva</arg>
<arg>email=${email}</arg>
<arg>password=12345</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230731 16:48:38.735" level="INFO">${body} = {'nome': 'Fulano da Silva', 'email': 'cmkt@emailteste.com', 'password': '12345', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230731 16:48:38.734" endtime="20230731 16:48:38.735"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230731 16:48:38.736" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230731 16:48:38.735" endtime="20230731 16:48:38.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:38.737" level="INFO">{'nome': 'Fulano da Silva', 'email': 'cmkt@emailteste.com', 'password': '12345', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20230731 16:48:38.736" endtime="20230731 16:48:38.737"/>
</kw>
<kw name="Criar Sessão na ServeRest" library="api_teste_resource">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230731 16:48:38.738" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230731 16:48:38.738" endtime="20230731 16:48:38.738"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=ServeRest</arg>
<arg>url=https://serverest.dev</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230731 16:48:38.739" level="INFO">Creating Session using : alias=ServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230731 16:48:38.738" endtime="20230731 16:48:38.739"/>
</kw>
<status status="PASS" starttime="20230731 16:48:38.737" endtime="20230731 16:48:38.740"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${reposta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/usuarios</arg>
<arg>json=${body}</arg>
<arg>expected_status=${status_code_desejado}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230731 16:48:39.159" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '105'} 
 body=b'{"nome": "Fulano da Silva", "email": "cmkt@emailteste.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg timestamp="20230731 16:48:39.159" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'daed67fc-99fb-4b64-81b0-7a2057a6d9ee', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'acee437be3835a44b972438cfae1105f', 'Date': 'Mon, 31 Jul 2023 19:48:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "QSh8W00hcx6PxZm8"
} 
 </msg>
<msg timestamp="20230731 16:48:39.160" level="INFO">C:\Users\gusta\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20230731 16:48:39.161" level="INFO">${reposta} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20230731 16:48:38.740" endtime="20230731 16:48:39.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${reposta.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:39.164" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'QSh8W00hcx6PxZm8'}</msg>
<status status="PASS" starttime="20230731 16:48:39.162" endtime="20230731 16:48:39.165"/>
</kw>
<if>
<branch type="IF" condition="${reposta.status_code} == 201">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID_USUARIO}</arg>
<arg>${reposta.json()["_id"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230731 16:48:39.169" level="INFO">${ID_USUARIO} = QSh8W00hcx6PxZm8</msg>
<status status="PASS" starttime="20230731 16:48:39.167" endtime="20230731 16:48:39.170"/>
</kw>
<status status="PASS" starttime="20230731 16:48:39.165" endtime="20230731 16:48:39.170"/>
</branch>
<status status="PASS" starttime="20230731 16:48:39.165" endtime="20230731 16:48:39.170"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<arg>${reposta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230731 16:48:39.173" level="INFO">${RESPOSTA} = {'message': 'Cadastro realizado com sucesso', '_id': 'QSh8W00hcx6PxZm8'}</msg>
<status status="PASS" starttime="20230731 16:48:39.171" endtime="20230731 16:48:39.174"/>
</kw>
<status status="PASS" starttime="20230731 16:48:38.734" endtime="20230731 16:48:39.174"/>
</kw>
<kw name="Consultar os dados do novo usuário" library="api_teste_resource">
<kw name="GET On Session" library="RequestsLibrary">
<var>${respota_consulta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/usuarios/${ID_USUARIO}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230731 16:48:39.367" level="INFO">GET Request : url=https://serverest.dev/usuarios/QSh8W00hcx6PxZm8 
 path_url=/usuarios/QSh8W00hcx6PxZm8 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20230731 16:48:39.368" level="INFO">GET Response : url=https://serverest.dev/usuarios/QSh8W00hcx6PxZm8 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'ddc77534-10df-46eb-903b-29fc1c655ce6', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '88600956ce15096934a5adbee6fd5126;o=1', 'Date': 'Mon, 31 Jul 2023 19:48:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '154'} 
 body={
    "nome": "Fulano da Silva",
    "email": "cmkt@emailteste.com",
    "password": "12345",
    "administrador": "true",
    "_id": "QSh8W00hcx6PxZm8"
} 
 </msg>
<msg timestamp="20230731 16:48:39.368" level="INFO">C:\Users\gusta\AppData\Local\Programs\Python\Python311\Lib\site-packages\urllib3\connectionpool.py:1095: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg timestamp="20230731 16:48:39.370" level="INFO">${respota_consulta} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230731 16:48:39.177" endtime="20230731 16:48:39.371"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESP_CONSULTA}</arg>
<arg>${respota_consulta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230731 16:48:39.373" level="INFO">${RESP_CONSULTA} = {'nome': 'Fulano da Silva', 'email': 'cmkt@emailteste.com', 'password': '12345', 'administrador': 'true', '_id': 'QSh8W00hcx6PxZm8'}</msg>
<status status="PASS" starttime="20230731 16:48:39.371" endtime="20230731 16:48:39.374"/>
</kw>
<status status="PASS" starttime="20230731 16:48:39.176" endtime="20230731 16:48:39.374"/>
</kw>
<kw name="Conferir os dados retornados" library="api_teste_resource">
<kw name="Log" library="BuiltIn">
<arg>${RESP_CONSULTA}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230731 16:48:39.376" level="INFO">{'nome': 'Fulano da Silva', 'email': 'cmkt@emailteste.com', 'password': '12345', 'administrador': 'true', '_id': 'QSh8W00hcx6PxZm8'}</msg>
<status status="PASS" starttime="20230731 16:48:39.376" endtime="20230731 16:48:39.377"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESP_CONSULTA}</arg>
<arg>nome</arg>
<arg>Fulano da Silva</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230731 16:48:39.377" endtime="20230731 16:48:39.378"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESP_CONSULTA}</arg>
<arg>email</arg>
<arg>${EMAIL_TESTE}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230731 16:48:39.378" endtime="20230731 16:48:39.380"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESP_CONSULTA}</arg>
<arg>password</arg>
<arg>12345</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230731 16:48:39.381" endtime="20230731 16:48:39.381"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESP_CONSULTA}</arg>
<arg>administrador</arg>
<arg>true</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230731 16:48:39.382" endtime="20230731 16:48:39.383"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESP_CONSULTA}</arg>
<arg>_id</arg>
<arg>${ID_USUARIO}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20230731 16:48:39.383" endtime="20230731 16:48:39.384"/>
</kw>
<status status="PASS" starttime="20230731 16:48:39.375" endtime="20230731 16:48:39.384"/>
</kw>
<status status="PASS" starttime="20230731 16:48:38.723" endtime="20230731 16:48:39.385"/>
</test>
<status status="PASS" starttime="20230731 16:48:36.891" endtime="20230731 16:48:39.388"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="Api Teste Usuarios">Api Teste Usuarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
